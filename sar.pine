//@version=4
study("SAR Testing B", shorttitle="SAR Testing B", overlay=true)

// Branded under the name "Lucid SAR" 
// As agreed to with Lucid Investment Strategies LLC on July 9, 2019
// https://lucidinvestmentstrategies.com/


// Created by Casey Bowman on July 4, 2019

// MIT License

// Copyright (c) 2019 Casey Bowman

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

// The following four global variables are used to provide events between the two indicators combined here,
// so that one indicator when triggered triggers the other into a reversal, too
TSR_reversal_triggered = false
TSR_reversal_to_uptrend = boolean(na)
SAR_reversal_triggered = false
SAR_reversal_to_uptrend = boolean(na)


AF_initial = input(0.02)
AF_increment = input(0.02)
AF_maximum = input(0.2)

LUCID_SAR(initial, increment, maximum) =>

    // start with uptrend
    uptrend = true
    new_trend = false
    EP = high
    SAR = low
    AF = AF_initial


    reversal_triggered = false

    if not na(uptrend[1]) and not na(new_trend[1])

        if uptrend[1]
            EP := max(high, EP[1])
        else
            EP := min(low, EP[1])
        if new_trend[1]
            AF := AF_initial
        else
            if EP != EP[1]
                AF := min(AF_maximum, AF[1] + AF_increment)
            else
                AF := AF[1]


        SAR := SAR[1] + AF * (EP - SAR[1])
        if uptrend[1]
            if new_trend
                SAR := max(high, EP[1])
                EP := min(low, low[1])
            else
                SAR := min(SAR, low[1])
                if not na(low[2])
                    SAR := min(SAR, low[2])
                if SAR > low
                    uptrend := false
                    new_trend := true
                    SAR := max(high, EP[1])
                    EP := min(low, low[1])
                    reversal_triggered := true
                else
                    uptrend := true
                    new_trend := false
        else
            if new_trend
                SAR := min(low, EP[1])
                EP := max(high, high[1])
            else
                SAR := max(SAR, high[1])
                if not na(high[2])
                    SAR := max(SAR, high[2])
                if SAR < high
                    uptrend := true
                    new_trend := true
                    SAR := min(low, EP[1])
                    EP := max(high, high[1])
                    reversal_triggered := true
                else
                    uptrend := false
                    new_trend := false

    if barstate.isconfirmed
        if reversal_triggered
            SAR_reversal_triggered := true
            SAR_reversal_to_uptrend := uptrend

        if TSR_reversal_triggered and not SAR_reversal_triggered
            if  TSR_reveral_to_uptrend
                uptrend := true
                new_trend := true
                SAR := min(low, EP[1])
                EP := max(high, high[1])

            else
                uptrend := false
                new_trend := true
                SAR := max(high, EP[1])
                EP := min(low, low[1])


    SAR



TSR() =>

    // start with uptrend
    var uptrend = true
    var EP = high       // extreme price - high or low depending on trend
    var SP = low        // setup price
    var TP = float(na)  // trigger price

    setup   = low
    trigger = float(na)

    extreme_candle = false
    setup_candle = false
    trigger_candle = false

    waiting_for_setup = false
    waiting_for_trigger = false

    var since_extreme = 0
    var since_setup = 0

    reversal_triggered = false

    if not barstate.isfirst

        if barstate.isnew
            if SAR_reversal_triggered[1] and not TSR_reversal_triggered[1]
                if  SAR_reveral_to_uptrend[1]
                    EP := low[1]
                    SP := high[1]
                    TP := float(na)
                    since_extreme := 0
                    since_setup   := 0
                    uptrend := true
                else
                    EP := high[1]
                    SP := low[1]
                    TP := float(na)
                    since_extreme := 0
                    since_setup   := 0
                    uptrend := false

            waiting_for_setup   := not extreme_candle and not na(SP)
            waiting_for_trigger := not extreme_candle and not na(TP)

            if barstate.isnew and waiting_for_trigger
                since_setup := since_setup + 1
                trigger := TP
            if barstate.isnew and waiting_for_setup
                since_extreme := since_extreme + 1
                setup := SP
            if uptrend

                if extreme_candle
                    EP := high
                    SP := low
                else
                    if high > EP
                        extreme_candle := true
                        EP := high
                        SP := low
                        TP := float(na)
                        since_extreme := 0
                        since_setup   := 0
                    else
                        if waiting_for_setup
                            if barstate.isconfirmed
                                if close < SP
                                    setup_candle := true
                                    SP := float(na)
                                    TP := low
                        else
                            if waiting_for_trigger
                                if low < TP
                                    trigger_candle := true
                                    extreme_candle := true
                                    EP := low
                                    SP := high
                                    TP := float(na)
                                    uptrend := false
                                    reversal_triggered := true

            else
                if extreme_candle
                    EP := low
                    SP := high
                else
                    if low <  EP
                        extreme_candle := true
                        EP := low
                        SP := high
                        TP := float(na)
                        since_extreme := 0
                        since_setup   := 0
                    else
                        if waiting_for_setup
                            if barstate.isconfirmed
                                if close > SP
                                    setup_candle := true
                                    SP := float(na)
                                    TP := high
                        else
                            if waiting_for_trigger
                                if high > TP
                                    trigger_candle := true
                                    extreme_candle := true
                                    EP := high
                                    SP := low
                                    TP := float(na)
                                    uptrend := true
                                    reversal_triggered := true

    if barstate.isconfirmed
        if reversal_triggered
            TSR_reversal_triggered := true
            TSR_reversal_to_uptrend := uptrend

    [trigger_candle, trigger, since_setup, setup_candle, setup, since_extreme, extreme_candle, uptrend]

// Note: the TSR() call must be made before the L_SAR() call
// because the handling of the TSR_triggering by L_SAR() is handled in the barstate.isconfirmed state
// not in the barstate.isnew state which is where the handling of the SAR_triggering by TSR() is handled

[TC, T, SS, SC, S, SE, EC, up] = TSR()

L_SAR = LUCID_SAR(AF_initial, AF_increment, AF_maximum)



plot(T, color = color.navy, style = plot.style_cross, linewidth = 3)

plotshape(TC and up, color = color.navy, style = shape.triangleup, location = location.belowbar)

plotshape(SC and up, color = color.red, style = shape.triangleup, location = location.abovebar)

plotshape(EC and up, color = color.yellow, style = shape.triangleup, location = location.abovebar)

plotshape(TC and not up, color = color.navy, style = shape.triangledown, location = location.abovebar)

plotshape(SC and not up, color = color.red, style = shape.triangledown, location = location.belowbar)

plotshape(EC and not up, color = color.yellow, style = shape.triangledown, location = location.belowbar)

plot(L_SAR, color = color.blue, style = plot.style_cross, linewidth = 1)

